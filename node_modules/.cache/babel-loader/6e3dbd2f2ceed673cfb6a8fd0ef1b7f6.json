{"ast":null,"code":"import _regeneratorRuntime from \"/Users/da_m1_44/Portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/da_m1_44/Portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/da_m1_44/Portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/da_m1_44/Portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nexport var FrameManager = /*#__PURE__*/function () {\n  function FrameManager(container) {\n    _classCallCheck(this, FrameManager);\n    this.container = container;\n  }\n  _createClass(FrameManager, [{\n    key: \"nextFrame\",\n    value: function () {\n      var _nextFrame = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(timestamp) {\n        var _a, container, deltaValue, delta;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                container = this.container;\n                if (!(container.lastFrameTime !== undefined && timestamp < container.lastFrameTime + 1000 / container.fpsLimit)) {\n                  _context.next = 5;\n                  break;\n                }\n                container.draw(false);\n                return _context.abrupt(\"return\");\n              case 5:\n                (_a = container.lastFrameTime) !== null && _a !== void 0 ? _a : container.lastFrameTime = timestamp;\n                deltaValue = timestamp - container.lastFrameTime;\n                delta = {\n                  value: deltaValue,\n                  factor: 60 * deltaValue / 1000\n                };\n                container.lifeTime += delta.value;\n                container.lastFrameTime = timestamp;\n                if (!(deltaValue > 1000)) {\n                  _context.next = 13;\n                  break;\n                }\n                container.draw(false);\n                return _context.abrupt(\"return\");\n              case 13:\n                _context.next = 15;\n                return container.particles.draw(delta);\n              case 15:\n                if (!(container.duration > 0 && container.lifeTime > container.duration)) {\n                  _context.next = 18;\n                  break;\n                }\n                container.destroy();\n                return _context.abrupt(\"return\");\n              case 18:\n                if (container.getAnimationStatus()) {\n                  container.draw(false);\n                }\n                _context.next = 24;\n                break;\n              case 21:\n                _context.prev = 21;\n                _context.t0 = _context[\"catch\"](0);\n                console.error(\"tsParticles error in animation loop\", _context.t0);\n              case 24:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 21]]);\n      }));\n      function nextFrame(_x) {\n        return _nextFrame.apply(this, arguments);\n      }\n      return nextFrame;\n    }()\n  }]);\n  return FrameManager;\n}();","map":null,"metadata":{},"sourceType":"module"}