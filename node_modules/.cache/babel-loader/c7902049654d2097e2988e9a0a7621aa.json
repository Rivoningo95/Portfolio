{"ast":null,"code":"var _jsxFileName = \"/Users/da_m1_44/Desktop/Portfolio/src/components/Projects/Projects.js\";\nimport React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport ProjectCard from \"./ProjectCards\";\nimport leaf from \"../../Assets/Projects/leaf.png\";\nimport emotion from \"../../Assets/Projects/emotion.png\";\nimport editor from \"../../Assets/Projects/codeEditor.png\";\nimport chatify from \"../../Assets/Projects/chatify.png\";\nimport suicide from \"../../Assets/Projects/suicide.png\";\nimport bitsOfCode from \"../../Assets/Projects/blog.png\";\nfunction Projects() {\n  return /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    className: \"project-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"project-heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, \"My Recent \", /*#__PURE__*/React.createElement(\"strong\", {\n    className: \"purple\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 21\n    }\n  }, \"Works \")), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, \"Here are a few projects I've worked on recently.\"), /*#__PURE__*/React.createElement(Row, {\n    style: {\n      justifyContent: \"center\",\n      paddingBottom: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 4,\n    className: \"project-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ProjectCard, {\n    imgPath: chatify,\n    isBlog: false,\n    title: \"Chatify\",\n    description: \"Personal Chat Room or Workspace to share resources and hangout with friends build with react.js, Material-UI, and Firebase. Have features which allows user for realtime messaging, image sharing as well as supports reactions on messages.\",\n    ghLink: \"https://github.com/soumyajit4419/Chatify\",\n    demoLink: \"https://chatify-49.web.app/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 4,\n    className: \"project-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ProjectCard, {\n    imgPath: bitsOfCode,\n    isBlog: false,\n    title: \"Food Receipt\",\n    description: \"My personal appilcation for food receipt.\",\n    ghLink: \"https://github.com/soumyajit4419/Bits-0f-C0de\",\n    demoLink: \"https://blogs.soumya-jit.tech/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 4,\n    className: \"project-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ProjectCard, {\n    imgPath: editor,\n    isBlog: false,\n    title: \"To do list\",\n    description: \"To do list application that we did as a group\",\n    ghLink: \"https://github.com/soumyajit4419/Editor.io\",\n    demoLink: \"https://editor.soumya-jit.tech/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 4,\n    className: \"project-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ProjectCard, {\n    imgPath: leaf,\n    isBlog: false,\n    title: \"Plant AI\",\n    description: \"Used the plant disease dataset from Kaggle and trained a image classifer model using 'PyTorch' framework using CNN and Transfer Learning with 38 classes of various plant leaves. The model was successfully able to detect diseased and healthy leaves of 14 unique plants. I was able to achieve an accuracy of 98% by using Resnet34 pretrained model.\",\n    ghLink: \"https://github.com/soumyajit4419/Plant_AI\",\n    demoLink: \"https://plant49-ai.herokuapp.com/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 4,\n    className: \"project-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ProjectCard, {\n    imgPath: suicide,\n    isBlog: false,\n    title: \"Movie \",\n    description: \"Movie app that we did as a team.\",\n    ghLink: \"https://github.com/soumyajit4419/AI_For_Social_Good\"\n    // demoLink=\"https://www.youtube.com/watch?v=dQw4w9WgXcQ&ab_channel=RickAstley\" <--------Please include a demo link here\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 4,\n    className: \"project-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ProjectCard, {\n    imgPath: emotion,\n    isBlog: false,\n    title: \"Face Recognition and Emotion Detection\",\n    description: \"Trained a CNN classifier using 'FER-2013 dataset' with Keras and tensorflow backened. The classifier sucessfully predicted the various types of emotions of human. And the highest accuracy obtained with the model was 60.1%. Then used Open-CV to detect the face in an image and then pass the face to the classifer to predict the emotion of a person.\",\n    ghLink: \"https://github.com/soumyajit4419/Face_And_Emotion_Detection\"\n    // demoLink=\"https://blogs.soumya-jit.tech/\"      <--------Please include a demo link here \n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  })))));\n}\nexport default Projects;","map":{"version":3,"names":["React","Container","Row","Col","ProjectCard","leaf","emotion","editor","chatify","suicide","bitsOfCode","Projects","color","justifyContent","paddingBottom"],"sources":["/Users/da_m1_44/Desktop/Portfolio/src/components/Projects/Projects.js"],"sourcesContent":["import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport ProjectCard from \"./ProjectCards\";\nimport leaf from \"../../Assets/Projects/leaf.png\";\nimport emotion from \"../../Assets/Projects/emotion.png\";\nimport editor from \"../../Assets/Projects/codeEditor.png\";\nimport chatify from \"../../Assets/Projects/chatify.png\";\nimport suicide from \"../../Assets/Projects/suicide.png\";\nimport bitsOfCode from \"../../Assets/Projects/blog.png\";\n\nfunction Projects() {\n  return (\n    <Container fluid className=\"project-section\">\n\n      <Container>\n        <h1 className=\"project-heading\">\n          My Recent <strong className=\"purple\">Works </strong>\n        </h1>\n        <p style={{ color: \"white\" }}>\n          Here are a few projects I've worked on recently.\n        </p>\n        <Row style={{ justifyContent: \"center\", paddingBottom: \"10px\" }}>\n          <Col md={4} className=\"project-card\">\n            <ProjectCard\n              imgPath={chatify}\n              isBlog={false}\n              title=\"Chatify\"\n              description=\"Personal Chat Room or Workspace to share resources and hangout with friends build with react.js, Material-UI, and Firebase. Have features which allows user for realtime messaging, image sharing as well as supports reactions on messages.\"\n              ghLink=\"https://github.com/soumyajit4419/Chatify\"\n              demoLink=\"https://chatify-49.web.app/\"\n            />\n          </Col>\n\n          <Col md={4} className=\"project-card\">\n            <ProjectCard\n              imgPath={bitsOfCode}\n              isBlog={false}\n              title=\"Food Receipt\"\n              description=\"My personal appilcation for food receipt.\"\n              ghLink=\"https://github.com/soumyajit4419/Bits-0f-C0de\"\n              demoLink=\"https://blogs.soumya-jit.tech/\"\n            />\n          </Col>\n\n          <Col md={4} className=\"project-card\">\n            <ProjectCard\n              imgPath={editor}\n              isBlog={false}\n              title=\"To do list\"\n              description=\"To do list application that we did as a group\"\n              ghLink=\"https://github.com/soumyajit4419/Editor.io\"\n              demoLink=\"https://editor.soumya-jit.tech/\"              \n            />\n          </Col>\n\n          <Col md={4} className=\"project-card\">\n            <ProjectCard\n              imgPath={leaf}\n              isBlog={false}\n              title=\"Plant AI\"\n              description=\"Used the plant disease dataset from Kaggle and trained a image classifer model using 'PyTorch' framework using CNN and Transfer Learning with 38 classes of various plant leaves. The model was successfully able to detect diseased and healthy leaves of 14 unique plants. I was able to achieve an accuracy of 98% by using Resnet34 pretrained model.\"\n              ghLink=\"https://github.com/soumyajit4419/Plant_AI\"\n              demoLink=\"https://plant49-ai.herokuapp.com/\"\n            />\n          </Col>\n\n          <Col md={4} className=\"project-card\">\n            <ProjectCard\n              imgPath={suicide}\n              isBlog={false}\n              title=\"Movie \"\n              description=\"Movie app that we did as a team.\"\n              ghLink=\"https://github.com/soumyajit4419/AI_For_Social_Good\"\n              // demoLink=\"https://www.youtube.com/watch?v=dQw4w9WgXcQ&ab_channel=RickAstley\" <--------Please include a demo link here\n            />\n          </Col>\n\n          <Col md={4} className=\"project-card\">\n            <ProjectCard\n              imgPath={emotion}\n              isBlog={false}\n              title=\"Face Recognition and Emotion Detection\"\n              description=\"Trained a CNN classifier using 'FER-2013 dataset' with Keras and tensorflow backened. The classifier sucessfully predicted the various types of emotions of human. And the highest accuracy obtained with the model was 60.1%.\n              Then used Open-CV to detect the face in an image and then pass the face to the classifer to predict the emotion of a person.\"\n              ghLink=\"https://github.com/soumyajit4419/Face_And_Emotion_Detection\"\n              // demoLink=\"https://blogs.soumya-jit.tech/\"      <--------Please include a demo link here \n            />\n          </Col>\n        </Row>\n      </Container>\n    </Container>\n  );\n}\n\nexport default Projects;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,GAAG,EAAEC,GAAG,QAAQ,iBAAiB;AACrD,OAAOC,WAAW,MAAM,gBAAgB;AACxC,OAAOC,IAAI,MAAM,gCAAgC;AACjD,OAAOC,OAAO,MAAM,mCAAmC;AACvD,OAAOC,MAAM,MAAM,sCAAsC;AACzD,OAAOC,OAAO,MAAM,mCAAmC;AACvD,OAAOC,OAAO,MAAM,mCAAmC;AACvD,OAAOC,UAAU,MAAM,gCAAgC;AAEvD,SAASC,QAAQ,GAAG;EAClB,oBACE,oBAAC,SAAS;IAAC,KAAK;IAAC,SAAS,EAAC,iBAAiB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAE1C,oBAAC,SAAS;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACR;IAAI,SAAS,EAAC,iBAAiB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,8BACnB;IAAQ,SAAS,EAAC,QAAQ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,YAAgB,CACjD,eACL;IAAG,KAAK,EAAE;MAAEC,KAAK,EAAE;IAAQ,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,sDAEzB,eACJ,oBAAC,GAAG;IAAC,KAAK,EAAE;MAAEC,cAAc,EAAE,QAAQ;MAAEC,aAAa,EAAE;IAAO,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAC9D,oBAAC,GAAG;IAAC,EAAE,EAAE,CAAE;IAAC,SAAS,EAAC,cAAc;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAClC,oBAAC,WAAW;IACV,OAAO,EAAEN,OAAQ;IACjB,MAAM,EAAE,KAAM;IACd,KAAK,EAAC,SAAS;IACf,WAAW,EAAC,8OAA8O;IAC1P,MAAM,EAAC,0CAA0C;IACjD,QAAQ,EAAC,6BAA6B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACtC,CACE,eAEN,oBAAC,GAAG;IAAC,EAAE,EAAE,CAAE;IAAC,SAAS,EAAC,cAAc;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAClC,oBAAC,WAAW;IACV,OAAO,EAAEE,UAAW;IACpB,MAAM,EAAE,KAAM;IACd,KAAK,EAAC,cAAc;IACpB,WAAW,EAAC,2CAA2C;IACvD,MAAM,EAAC,+CAA+C;IACtD,QAAQ,EAAC,gCAAgC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACzC,CACE,eAEN,oBAAC,GAAG;IAAC,EAAE,EAAE,CAAE;IAAC,SAAS,EAAC,cAAc;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAClC,oBAAC,WAAW;IACV,OAAO,EAAEH,MAAO;IAChB,MAAM,EAAE,KAAM;IACd,KAAK,EAAC,YAAY;IAClB,WAAW,EAAC,+CAA+C;IAC3D,MAAM,EAAC,4CAA4C;IACnD,QAAQ,EAAC,iCAAiC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAC1C,CACE,eAEN,oBAAC,GAAG;IAAC,EAAE,EAAE,CAAE;IAAC,SAAS,EAAC,cAAc;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAClC,oBAAC,WAAW;IACV,OAAO,EAAEF,IAAK;IACd,MAAM,EAAE,KAAM;IACd,KAAK,EAAC,UAAU;IAChB,WAAW,EAAC,2VAA2V;IACvW,MAAM,EAAC,2CAA2C;IAClD,QAAQ,EAAC,mCAAmC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAC5C,CACE,eAEN,oBAAC,GAAG;IAAC,EAAE,EAAE,CAAE;IAAC,SAAS,EAAC,cAAc;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAClC,oBAAC,WAAW;IACV,OAAO,EAAEI,OAAQ;IACjB,MAAM,EAAE,KAAM;IACd,KAAK,EAAC,QAAQ;IACd,WAAW,EAAC,kCAAkC;IAC9C,MAAM,EAAC;IACP;IAAA;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACA,CACE,eAEN,oBAAC,GAAG;IAAC,EAAE,EAAE,CAAE;IAAC,SAAS,EAAC,cAAc;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAClC,oBAAC,WAAW;IACV,OAAO,EAAEH,OAAQ;IACjB,MAAM,EAAE,KAAM;IACd,KAAK,EAAC,wCAAwC;IAC9C,WAAW,EAAC,6VACiH;IAC7H,MAAM,EAAC;IACP;IAAA;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACA,CACE,CACF,CACI,CACF;AAEhB;AAEA,eAAeK,QAAQ"},"metadata":{},"sourceType":"module"}